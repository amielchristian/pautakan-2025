{"version":3,"file":"preload.js","sources":["../electron/preload.cjs"],"sourcesContent":["// preload.cjs - CommonJS version for compatibility\r\nconst { contextBridge, ipcRenderer } = require('electron');\r\n\r\n// Log preload execution for debugging\r\nconsole.log('Preload script executing');\r\n\r\n// Expose APIs to renderer process\r\ncontextBridge.exposeInMainWorld('electronAPI', {\r\n  // Database operations\r\n  getAllColleges: () => ipcRenderer.invoke('get-all-colleges'),\r\n  getCollege: (shortHand) => ipcRenderer.invoke('get-college', shortHand),\r\n  updateScore: (shortHand, newScore) => ipcRenderer.invoke('update-score', shortHand, newScore),\r\n  incrementScore: (shortHand, increment = 1) => ipcRenderer.invoke('increment-score', shortHand, increment),\r\n  resetScores: () => ipcRenderer.invoke('reset-scores'),\r\n  \r\n  // Event listeners\r\n  onScoreUpdated: (callback) => {\r\n    const listener = (_, shortHand, newScore) => callback(shortHand, newScore);\r\n    ipcRenderer.on('score-updated', listener);\r\n    return () => {\r\n      ipcRenderer.removeListener('score-updated', listener);\r\n    };\r\n  },\r\n  \r\n  onScoresReset: (callback) => {\r\n    const listener = () => callback();\r\n    ipcRenderer.on('scores-reset', listener);\r\n    return () => {\r\n      ipcRenderer.removeListener('scores-reset', listener);\r\n    };\r\n  },\r\n  \r\n  // Basic messaging\r\n  receive: (channel, func) => {\r\n    const validChannels = ['main-process-message'];\r\n    if (validChannels.includes(channel)) {\r\n      ipcRenderer.on(channel, (_, ...args) => func(...args));\r\n    }\r\n  },\r\n  \r\n  send: (channel, data) => {\r\n    const validChannels = ['from-renderer'];\r\n    if (validChannels.includes(channel)) {\r\n      ipcRenderer.send(channel, data);\r\n    }\r\n  }\r\n});\r\n\r\nconsole.log('Preload script completed');"],"names":[],"mappings":";;AACA,MAAM,EAAE,eAAe,YAAa,IAAG;AAGvC,QAAQ,IAAI,0BAA0B;AAGtC,cAAc,kBAAkB,eAAe;AAAA;AAAA,EAE7C,gBAAgB,MAAM,YAAY,OAAO,kBAAkB;AAAA,EAC3D,YAAY,CAAC,cAAc,YAAY,OAAO,eAAe,SAAS;AAAA,EACtE,aAAa,CAAC,WAAW,aAAa,YAAY,OAAO,gBAAgB,WAAW,QAAQ;AAAA,EAC5F,gBAAgB,CAAC,WAAW,YAAY,MAAM,YAAY,OAAO,mBAAmB,WAAW,SAAS;AAAA,EACxG,aAAa,MAAM,YAAY,OAAO,cAAc;AAAA;AAAA,EAGpD,gBAAgB,CAAC,aAAa;AAC5B,UAAM,WAAW,CAAC,GAAG,WAAW,aAAa,SAAS,WAAW,QAAQ;AACzE,gBAAY,GAAG,iBAAiB,QAAQ;AACxC,WAAO,MAAM;AACX,kBAAY,eAAe,iBAAiB,QAAQ;AAAA,IAC1D;AAAA,EACG;AAAA,EAED,eAAe,CAAC,aAAa;AAC3B,UAAM,WAAW,MAAM;AACvB,gBAAY,GAAG,gBAAgB,QAAQ;AACvC,WAAO,MAAM;AACX,kBAAY,eAAe,gBAAgB,QAAQ;AAAA,IACzD;AAAA,EACG;AAAA;AAAA,EAGD,SAAS,CAAC,SAAS,SAAS;AAC1B,UAAM,gBAAgB,CAAC,sBAAsB;AAC7C,QAAI,cAAc,SAAS,OAAO,GAAG;AACnC,kBAAY,GAAG,SAAS,CAAC,MAAM,SAAS,KAAK,GAAG,IAAI,CAAC;AAAA,IACtD;AAAA,EACF;AAAA,EAED,MAAM,CAAC,SAAS,SAAS;AACvB,UAAM,gBAAgB,CAAC,eAAe;AACtC,QAAI,cAAc,SAAS,OAAO,GAAG;AACnC,kBAAY,KAAK,SAAS,IAAI;AAAA,IAC/B;AAAA,EACF;AACH,CAAC;AAED,QAAQ,IAAI,0BAA0B;"}