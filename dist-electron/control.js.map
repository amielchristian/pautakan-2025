{"version":3,"file":"control.js","sources":["../src/ControlView.tsx","../src/control.tsx"],"sourcesContent":["import './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { College } from './types';\r\n\r\nexport default function ControlView() {\r\n  const [colleges, setColleges] = useState<College[]>([]);\r\n  // const [leaderboard, setLeaderboard] = useState<College[]>([]);\r\n  const [difficulty, setDifficulty] = useState('Easy');\r\n  const [category, setCategory] = useState('Eliminations');\r\n\r\n  // Load colleges\r\n  useEffect(() => {\r\n    const getColleges = async () => {\r\n      setColleges(await window.ipcRenderer.invoke('get-colleges'));\r\n    };\r\n    console.log('Getting colleges...');\r\n    getColleges();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const changeCategory = async () => {\r\n      await window.ipcRenderer.invoke('change-category', category);\r\n    };\r\n    changeCategory();\r\n  }, [category]);\r\n\r\n  useEffect(() => {\r\n    const changeDifficulty = async () => {\r\n      await window.ipcRenderer.invoke('change-difficulty', difficulty);\r\n    };\r\n    changeDifficulty();\r\n  }, [difficulty]);\r\n\r\n  // Update colleges on change\r\n  // ...then sync to DB\r\n  async function updateScore(college: College, offset: number) {\r\n    const collegeUpdated = { ...college, score: college.score + offset };\r\n    setColleges(\r\n      colleges.map((x: College) =>\r\n        x.name === collegeUpdated.name ? collegeUpdated : x\r\n      )\r\n    );\r\n    await window.ipcRenderer.invoke(\r\n      'update-college-score',\r\n      collegeUpdated.shorthand,\r\n      collegeUpdated.score\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='w-screen h-screen justify-center items-center flex flex-col'>\r\n      <div className='h-1/10 w-4/5 bg-gray-300 flex flex-row p-4 space-x-[1%] sharp-edge-box [--bottom-right:20px] [--bottom-left:20px]'>\r\n        <select\r\n          id='category'\r\n          onChange={(e) => setCategory(e.target.value)}\r\n          defaultValue={category}\r\n        >\r\n          <option value='Eliminations'>Eliminations</option>\r\n          <option value='Finals'>Finals</option>\r\n        </select>\r\n        <select\r\n          id='difficulty'\r\n          onChange={(e) => setDifficulty(e.target.value)}\r\n          defaultValue={difficulty}\r\n        >\r\n          <option value='Easy'>Easy</option>\r\n          <option value='Average'>Average</option>\r\n          <option value='Difficult'>Difficult</option>\r\n          <option value='Clincher'>Clincher</option>\r\n          <option value='Sudden Death'>Sudden Death</option>\r\n        </select>\r\n        <button>Reset Scores</button>\r\n        <button>Refresh</button>\r\n      </div>\r\n\r\n      <div className='h-4/5 w-3/5 mx-[20%]'>\r\n        <table className='w-full h-full'>\r\n          <thead>\r\n            <tr>\r\n              <th>Rank</th>\r\n              <th>College</th>\r\n              <th>Score</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {colleges.map((college: College, index: number) => (\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{college.name}</td>\r\n                <td>\r\n                  <div className='flex flex-row space-x-4'>\r\n                    <span>{college.score}</span>\r\n                    <ScoreButton\r\n                      college={college}\r\n                      add={false}\r\n                      difficulty={difficulty}\r\n                      updateScore={updateScore}\r\n                    />\r\n                    <ScoreButton\r\n                      college={college}\r\n                      add={true}\r\n                      difficulty={difficulty}\r\n                      updateScore={updateScore}\r\n                    />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className='h-1/10 bg-gray-300 flex flex-row p-4 space-x-[1%]'>\r\n        <button>Show Leaderboard</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ScoreButton({\r\n  college,\r\n  add,\r\n  difficulty,\r\n  updateScore,\r\n}: {\r\n  college: College;\r\n  add: boolean;\r\n  difficulty: string;\r\n  updateScore: (college: College, offset: number) => void;\r\n}) {\r\n  const changeScore = () => {\r\n    let offset: number;\r\n    switch (difficulty) {\r\n      case 'Easy':\r\n        offset = 5;\r\n        break;\r\n      case 'Average':\r\n        offset = 10;\r\n        break;\r\n      case 'Difficult':\r\n        offset = 15;\r\n        break;\r\n      default:\r\n        offset = 1;\r\n        break;\r\n    }\r\n    offset *= add ? 1 : -1;\r\n    updateScore(college, offset);\r\n  };\r\n\r\n  const styles = `p-2 ${\r\n    add ? 'bg-green-500 hover:bg-green-700' : 'bg-red-500 hover:bg-red-700'\r\n  }`;\r\n  return (\r\n    <button className={styles} onClick={changeScore}>\r\n      {add ? '+' : '-'}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport ControlView from './ControlView.tsx';\r\nimport './index.css';\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <ControlView />\r\n  </React.StrictMode>\r\n);\r\n"],"names":["useState","useEffect","jsxDEV","ReactDOM","this"],"mappings":"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"}